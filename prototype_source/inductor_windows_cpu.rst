How to use TorchInductor on Windows CPU
=======================================

**Author**: `Xu, Han <https://github.com/xuhancn>`_, `Zhaoqiong Zheng <https://github.com/ZhaoqiongZ>`_


Introduction
------------

TorchInductor is the new compiler backend that compiles the FX Graphs generated by TorchDynamo into optimized C++/Triton kernels.

This tutorial introduces the steps for utilizing TorchInductor on Windows CPU.



Software Installation
---------------------

Now, we will walk you through a step-by-step tutorial for how to use torchinductor on Windows CPU.

Install a Compiler
^^^^^^^^^^^^^^^^^^

TorchInductor Optimization need a compiler, let's take MSVC as an example.

Download and install `MSVC <https://visualstudio.microsoft.com/downloads/>`_.

During Installation, chosse `Desktop Development with C++` in the `Desktop & Mobile` Section and then install.

.. note::

    You can also choose other compiler like Clang & Intel Compiler.


Install Miniforge
^^^^^^^^^^^^^^^^^

Download and install `Miniforge <https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Windows-x86_64.exe>`_.

Set Up Environment
^^^^^^^^^^^^^^^^^^

1. Open a command line environment via cmd.exe.
2. Activate `MSVC` via below command:
::

    "C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Auxiliary/Build/vcvars64.bat"
3. Activate `conda` via below command:
::

    "C:/ProgramData/miniforge3/Scripts/activate.bat"
4. Create and activate customer conda environment:
::

    conda create -n inductor_cpu_windows python=3.10 -y 
    conda activate inductor_cpu_windows

5. `Install PyTorch 2.5 <https://pytorch.org/get-started/locally/>`_ or later.
6. Try `torchinductor` on Windows CPU:
::

    import torch
    def foo(x, y):
        a = torch.sin(x)
        b = torch.cos(x)
        return a + b
    opt_foo1 = torch.compile(foo)
    print(opt_foo1(torch.randn(10, 10), torch.randn(10, 10)))

Conclusion
----------

With this tutorial, we introduce how to use Inductor with X86 CPU in PyTorch 2.5 on Windows.  
